{
  "queries": [
    {
      "name": "customers/417739410/analysisQueries/6663648cfd624551be4d3c8509b8898c",
      "title": "20230811_microsoft_pc_windows PoC分析",
      "queryText": "with customer_prediction AS (\n    select\n        UPPER(TO_HEX(MD5(UPPER(device_id)))) device_id,\n        prediction\n    from\n        `cyberagent-420.ads_data_hub_input.customer_prediction`\n),\ngoogle_ads_impressions_rdid AS (\n    select distinct\n        gair.campaign_id,\n        campaign_name,\n        device_id_md5,\n    from\n        adh.google_ads_impressions_rdid as gair\n        join adh.google_ads_campaign as gac\n        on gair.campaign_id = gac.campaign_id\n    where\n        TIMESTAMP_MICROS(query_id.time_usec)\n            BETWEEN @local_start_date\n            AND TIMESTAMP_ADD(@local_start_date, INTERVAL @number_days*24 HOUR)\n),\nimpression_prediction AS (\n    select\n        campaign_id,\n        campaign_name,\n        device_id_md5,\n        prediction\n    from\n        google_ads_impressions_rdid\n        join customer_prediction\n        on device_id_md5 = device_id\n)\nselect\n    campaign_id,\n    campaign_name,\n    avg(prediction)\nfrom\n    impression_prediction\ngroup by\n    1, 2",
      "parameterTypes": {
        "local_start_date": {
          "type": {
            "type": "STRING"
          },
          "defaultValue": {
            "value": ""
          }
        },
        "number_days": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-11T02:55:53.033Z",
      "updateEmail": "kono_haruhi@cyberagent.co.jp",
      "createTime": "2023-09-11T02:46:14.783Z",
      "createEmail": "kono_haruhi@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/7b54b3857feb4c329fb7917152a081ae",
      "title": "adh_cache_test_chiba",
      "queryText": "select\n    campaign_id,\n    date(timestamp_micros(query_id.time_usec), 'Asia/Tokyo') as date,\n    count(query_id.time_usec) as imp\nfrom adh.google_ads_impressions\ngroup by 1, 2\n;",
      "queryState": "RUNNABLE",
      "updateTime": "2023-12-21T03:54:31.642Z",
      "updateEmail": "chiba_katsuhito@cyberagent.co.jp",
      "createTime": "2023-12-21T03:54:31.642Z",
      "createEmail": "chiba_katsuhito@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/04dd37c9842a46a7bc6a1a46de1743a1",
      "title": "ahd_noise_test_chiba",
      "queryText": "with customer AS (\n    select distinct\n        UPPER(TO_HEX(MD5(UPPER(device_id)))) device_id\n    from  \n        `aitech-aoc-akagi-cdp-dev.ads_data_hub_input.test_20231101_microsoft_windows`\n      limit 10000\n), join_table as (\n    select distinct\n        gair.campaign_id,\n        cus.device_id\n    from\n        customer as cus\n        left outer join\n        adh.google_ads_impressions_rdid as gair\n        on gair.device_id_md5 = device_id\n)\nselect count(*)\nfrom join_table\n;\n",
      "queryState": "RUNNABLE",
      "updateTime": "2023-12-21T01:47:26.757Z",
      "updateEmail": "chiba_katsuhito@cyberagent.co.jp",
      "createTime": "2023-08-10T08:17:14.718Z",
      "createEmail": "chiba_katsuhito@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/global/analysisQueries/c1020c79557e4f969978f6b6e9bb5d3d",
      "title": "aw_campaigns",
      "queryText": "SELECT\n    i.campaign_id,\n    cmp.campaign_name,\n    COUNT(i.query_id.time_usec) AS impressions\nFROM adh.google_ads_impressions i\n    LEFT JOIN adh.google_ads_campaign cmp ON (i.campaign_id = cmp.campaign_id)\nWHERE\n    TIMESTAMP_MICROS(i.query_id.time_usec)\n     BETWEEN @local_start_date\n     AND TIMESTAMP_ADD(@local_start_date,INTERVAL @number_days*24 HOUR)\nGROUP BY 1, 2\nORDER BY 3 DESC",
      "parameterTypes": {
        "local_start_date": {
          "type": {
            "type": "TIMESTAMP"
          },
          "defaultValue": {
            "value": ""
          }
        },
        "number_days": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:07.768Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "1970-01-01T00:00:00Z"
    },
    {
      "name": "customers/global/analysisQueries/50eba4de2dbd469da5d876ceaad74cb3",
      "title": "basic_reach_and_frequency_report",
      "queryText": "/* Parameters:\n * @advertisers (ARRAY of INT64): The advertiser IDs\n *   to conduct analysis on */\n\nSELECT\n  advertiser_mt.advertiser AS advertiser,\n  advertiser_mt.advertiser_id AS advertiser_id,\n  campaign_mt.campaign AS campaign,\n  imp.event.campaign_id AS campaign_id,\n  COUNT(DISTINCT imp.User_ID) AS uniques,\n  COUNT(imp.User_ID) AS impressions,\n  COUNT(imp.User_ID)/COUNT(DISTINCT imp.User_ID) AS avg_frequency\nFROM\n  adh.cm_dt_impressions AS imp\n\nLEFT JOIN (SELECT campaign,campaign_id FROM adh.cm_dt_campaign ) AS campaign_mt\nON imp.event.campaign_id = campaign_mt.campaign_id\nLEFT JOIN (SELECT advertiser, advertiser_id FROM adh.cm_dt_advertiser ) AS advertiser_mt\nON imp.event.advertiser_id = advertiser_mt.advertiser_id\n\nWHERE user_id \u003c\u003e '0'\nAND event.advertiser_id IN UNNEST(@advertisers)\n\nGROUP BY 1,2,3,4",
      "parameterTypes": {
        "advertisers": {
          "type": {
            "arrayType": {
              "type": "INT64"
            }
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:32:10.804Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-15T19:11:53.502Z",
      "createEmail": "samwasserman@google.com"
    },
    {
      "name": "customers/global/analysisQueries/c394054fd20a4d4885f1902bc3d91699",
      "title": "basic_reach_and_frequency_report_google_ads",
      "queryText": "/* Parameters:\n * @campaigns (ARRAY of INT64): The campaign IDs\n *   to conduct analysis on */\n\nWITH user_reach AS (\n  SELECT user_id,\n         count(*) AS num_views\n  FROM adh.google_ads_impressions\n  WHERE campaign_id in UNNEST(@campaigns)\n  GROUP BY user_id\n)\nSELECT\n  COUNT(*) AS unique_users,\n  COUNTIF(num_views = 1) AS one_view,\n  COUNTIF(num_views \u003e 1 AND num_views \u003c= 5) AS less_or_equal_five_views,\n  COUNTIF(num_views \u003e 5) AS more_than_five_views\nFROM user_reach",
      "parameterTypes": {
        "campaigns": {
          "type": {
            "arrayType": {
              "type": "INT64"
            }
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "num_views": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:32:13.311Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-30T21:43:26.417Z",
      "createEmail": "samwasserman@google.com"
    },
    {
      "name": "customers/global/analysisQueries/3a7c708d1dbd4392bd26ab6c7fc23099",
      "title": "basic_video_reporting_metrics",
      "queryText": "SELECT\n  I.order_id AS order_id,\n  I.line_item_id AS line_item_id,\n  I.creative_id AS creative_id,\n  C.creative_name AS creative_name,\n  unique_impressions,\n  unique_clicks,\n  total_impressions,\n  total_clicks,\n  SAFE_DIVIDE(total_clicks, total_impressions) AS ctr,\n  video_played_25,\n  video_played_50,\n  video_played_75,\n  video_played_100,\n  mute,\n  pause,\n  resume,\n  skipped\nFROM (\n  SELECT i.order_id AS order_id,\n    i.line_item_id, i.creative_id,\n    COUNT(DISTINCT i.query_id.time_usec) AS total_impressions, \n    COUNT(DISTINCT c.query_id.time_usec) AS total_clicks,\n    COUNT(DISTINCT i.user_id) AS unique_impressions,\n    COUNT(DISTINCT c.user_id) AS unique_clicks,\n    COUNTIF(conv.label = 'videoplaytime25') AS video_played_25,\n    COUNTIF(conv.label = 'videoplaytime50') AS video_played_50,\n    COUNTIF(conv.label = 'videoplaytime75') AS video_played_75,\n    COUNTIF(conv.label = 'videoplaytime100') AS video_played_100,\n    COUNTIF(conv.label = 'admute') AS mute,\n    COUNTIF(conv.label = 'adpause') AS pause,\n    COUNTIF(conv.label = 'adresume') AS resume,\n    COUNTIF(conv.label = 'videoskipped') AS skipped\n  FROM adh.yt_reserve_impressions AS i\n  LEFT JOIN adh.yt_reserve_clicks AS c USING (impression_id)\n  LEFT JOIN adh.yt_reserve_conversions AS conv USING (impression_id)\n  GROUP BY order_id, line_item_id, creative_id\n) AS i\nLEFT JOIN adh.yt_reserve_creative AS c ON i.creative_id = c.creative_id\nWHERE c.is_masthead IS FALSE;",
      "mergeSpec": {
        "columns": {
          "total_impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:32:16.091Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-15T19:11:55.852Z",
      "createEmail": "samwasserman@google.com"
    },
    {
      "name": "customers/global/analysisQueries/73231eba599d481fa359a1058d01ee4c",
      "title": "daily_aggregate_reporting",
      "queryText": "SELECT\n  i.event_date,\n  i.order_id, i.line_item_id,\n  Li.line_item_name,\n  Li.start_time,\n  Li.end_time,\n  li.order_name,\n  I.creative_id,\n  c.creative_name,\n  total_impressions,\n  total_clicks,\n  SAFE_DIVIDE(total_clicks, total_impressions) AS ctr,\n  pause,\n  skipped\nFROM (\n  SELECT i.order_id AS order_id,\n    i.line_item_id,\n    i.creative_id,\n    CAST(DATETIME(TIMESTAMP_MICROS(i.query_id.time_usec),\"America/New_York\")\n         as DATE) as event_date,\n    COUNT(DISTINCT i.query_id.time_usec) AS total_impressions,\n    COUNT(DISTINCT c.query_id.time_usec) AS total_clicks,\n    COUNTIF(conv.label = 'adpause') AS pause,\n    COUNTIF(conv.label = 'videoskipped') AS skipped\n  FROM adh.yt_reserve_impressions AS i\n  LEFT JOIN adh.yt_reserve_clicks AS c USING (impression_id)\n  LEFT JOIN adh.yt_reserve_conversions AS conv USING (impression_id)\n  GROUP BY order_id, line_item_id, creative_id\n    , CAST(DATETIME(TIMESTAMP_MICROS(i.query_id.time_usec),\"America/New_York\")\n           as DATE)\n) AS i\nLEFT JOIN adh.yt_reserve_creative AS c ON i.creative_id = c.creative_id\nLEFT JOIN adh.yt_reserve_lineitem AS li ON i.line_item_id = li.line_item_id",
      "mergeSpec": {
        "columns": {
          "total_impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:32:18.842Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-15T19:11:58.142Z",
      "createEmail": "samwasserman@google.com"
    },
    {
      "name": "customers/global/analysisQueries/8e72620bd5134e6a825b9f44a9f43e08",
      "title": "data_health_cm",
      "queryText": "WITH Impression AS (\n  SELECT\n    network_id,\n    'adh.cm_dt_impressions' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.cm_dt_impressions\n  GROUP BY\n    1, 2, 3\n),\n\nClick AS (\n  SELECT\n    network_id,\n    'adh.cm_dt_clicks' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.cm_dt_clicks\n  GROUP BY\n    1, 2, 3\n),\n\nRichMedia AS (\n  SELECT\n    network_id,\n    'adh.cm_dt_rich_media' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.cm_dt_rich_media\n  GROUP BY\n    1, 2, 3\n),\n\nActiveViewPlus AS (\n  SELECT\n    network_id,\n    'adh.cm_dt_active_view_plus' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.cm_dt_active_view_plus\n  GROUP BY\n    1, 2, 3\n),\n\nActivity AS (\n  SELECT\n    network_id,\n    'adh.cm_dt_activities_events' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.cm_dt_activities_events\n  GROUP BY\n    1, 2, 3\n),\n\nActivityAttributed AS (\n  SELECT\n    network_id,\n    'adh.cm_dt_activities_attributed' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.cm_dt_activities_attributed\n  GROUP BY\n    1, 2, 3\n),\n\nUnioned AS (\n  SELECT * FROM Impression\n  UNION ALL\n  SELECT * FROM Click\n  UNION ALL\n  SELECT * FROM RichMedia\n  UNION ALL\n  SELECT * FROM ActiveViewPlus\n  UNION ALL\n  SELECT * FROM Activity\n  UNION ALL\n  SELECT * FROM ActivityAttributed\n)\n\nSELECT\n  *\nFROM\n  Unioned\nWHERE\n  @network_id = 0 OR network_id = @network_id\nORDER BY\n  1, 2, 3;",
      "parameterTypes": {
        "network_id": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "row_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:22.783Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2019-09-17T22:40:40.625Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/global/analysisQueries/3f4e1a0310eb4b53aa7d7467980b2b22",
      "title": "data_health_dv360",
      "queryText": "WITH Impression AS (\n  SELECT\n    event.dv360_advertiser_id,\n    'adh.dv360_dt_impressions' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.dv360_dt_impressions\n  GROUP BY\n    1, 2, 3\n),\n\nClick AS (\n  SELECT\n    event.dv360_advertiser_id,\n    'adh.dv360_dt_clicks' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.dv360_dt_clicks\n  GROUP BY\n    1, 2, 3\n),\n\nActivity AS (\n  SELECT\n    event.dv360_advertiser_id,\n    'adh.dv360_dt_activities_attributed' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.dv360_dt_activities_attributed\n    WHERE event.attribution_model_config_id = 0 # Filter to count events from the default attribution model only\n  GROUP BY\n    1, 2, 3\n),\n\nActiveViewPlus AS (\n  SELECT\n    event.dv360_advertiser_id,\n    'adh.dv360_dt_active_view_plus' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(event.event_time), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.dv360_dt_active_view_plus\n  GROUP BY\n    1, 2, 3\n),\n\nUnioned AS (\n  SELECT * FROM Impression\n  UNION ALL\n  SELECT * FROM Click\n  UNION ALL\n  SELECT * FROM ActiveViewPlus\n  UNION ALL\n  SELECT * FROM Activity\n)\n\nSELECT\n  ADVERTISER.dv360_partner_id,\n  UNIONED.*\nFROM\n  Unioned AS UNIONED\nLEFT JOIN\n  adh.dv360_dt_advertiser AS ADVERTISER\n  ON ADVERTISER.dv360_advertiser_id = UNIONED.dv360_advertiser_id\nWHERE\n  (@dv360_partner_id = 0 OR ADVERTISER.dv360_partner_id = @dv360_partner_id)\n  AND (@dv360_advertiser_id = 0 OR UNIONED.dv360_advertiser_id = @dv360_advertiser_id)\nORDER BY\n  1, 2, 3, 4;",
      "parameterTypes": {
        "dv360_advertiser_id": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        },
        "dv360_partner_id": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "row_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:26.377Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2019-09-17T22:40:43.112Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/global/analysisQueries/00d30ae989fa487d9a96e15afc244770",
      "title": "data_health_google_ads",
      "queryText": "WITH Click AS (\n  SELECT\n    IMPRESSION.customer_id,\n    'adh.google_ads_clicks' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(click_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.google_ads_clicks AS CLICK\n  LEFT JOIN\n    adh.google_ads_impressions AS IMPRESSION USING (impression_id)\n  GROUP BY\n    1, 2, 3\n),\n\nActiveView AS (\n  SELECT\n    IMPRESSION.customer_id,\n    'adh.google_ads_active_views' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(ACTIVE_VIEW.view_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.google_ads_active_views AS ACTIVE_VIEW\n  LEFT JOIN\n    adh.google_ads_impressions AS IMPRESSION USING (impression_id)\n  GROUP BY\n    1, 2, 3\n),\n\nConversionView AS (\n  SELECT\n    IMPRESSION.customer_id,\n    'adh.google_ads_conversions' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(conversion_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.google_ads_conversions AS CONVERSION\n  LEFT JOIN\n    adh.google_ads_impressions AS IMPRESSION USING (impression_id)\n  GROUP BY\n    1, 2, 3\n),\n\nImpressionView AS (\n  SELECT\n    customer_id,\n    'adh.google_ads_impressions' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(query_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.google_ads_impressions\n  GROUP BY\n    1, 2, 3\n),\n\nUnioned AS (\n  SELECT * FROM ImpressionView\n  UNION ALL\n  SELECT * FROM Click\n  UNION ALL\n  SELECT * FROM ActiveView\n  UNION ALL\n  SELECT * FROM ConversionView\n)\n\nSELECT\n  mcc_id,\n  UNIONED.*\nFROM\n  Unioned AS UNIONED\nLEFT JOIN\n  adh.google_ads_customer AS CUSTOMER\n  ON UNIONED.customer_id = CUSTOMER.customer_id\nLEFT JOIN\n  CUSTOMER.mcc_ids AS mcc_id\nWHERE\n  (@MCC_ID = 0 OR mcc_id = @MCC_ID)\n  AND (@CID = 0 OR UNIONED.customer_id = @CID)\nORDER BY\n  1, 2, 3, 4;",
      "parameterTypes": {
        "MCC_ID": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        },
        "CID": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "row_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:31.086Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2019-09-17T22:40:46.938Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/global/analysisQueries/45eb6ffd09104de38bc7ac1b5ce50ad4",
      "title": "data_health_yt_reserve",
      "queryText": "WITH Impression AS (\n  SELECT\n    order_id,\n    'adh.yt_reserve_impressions' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(query_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.yt_reserve_impressions\n  GROUP BY\n    1, 2, 3\n),\n\nClick AS (\n  SELECT\n    order_id,\n    'adh.yt_reserve_clicks' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(CLICK.click_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.yt_reserve_clicks AS CLICK\n  LEFT JOIN\n    adh.yt_reserve_impressions AS IMPRESSION USING (impression_id)\n  GROUP BY\n    1, 2, 3\n),\n\nConversion AS (\n  SELECT\n    order_id,\n    'adh.yt_reserve_clicks' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(CONVERSION.conversion_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.yt_reserve_conversions AS CONVERSION\n  LEFT JOIN\n    adh.yt_reserve_impressions AS IMPRESSION USING (impression_id)\n  GROUP BY\n    1, 2, 3\n),\n\nActiveView AS (\n  SELECT\n    order_id,\n    'adh.yt_reserve_clicks' AS view,\n    FORMAT_TIMESTAMP('%F', TIMESTAMP_MICROS(ACTIVE_VIEW.view_id.time_usec), @time_zone) AS day,\n    COUNT(*) AS row_count\n  FROM\n    adh.yt_reserve_active_views AS ACTIVE_VIEW\n  LEFT JOIN\n    adh.yt_reserve_impressions AS IMPRESSION USING (impression_id)\n  GROUP BY\n    1, 2, 3\n),\n\nUnioned AS (\n  SELECT * FROM Impression\n  UNION ALL\n  SELECT * FROM Click\n  UNION ALL\n  SELECT * FROM Conversion\n  UNION ALL\n  SELECT * FROM ActiveView\n)\n\nSELECT\n  *\nFROM\n  Unioned\nWHERE\n  @order_id = 0 OR order_id = @order_id\nORDER BY\n  1, 2, 3;",
      "parameterTypes": {
        "order_id": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "row_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:35.052Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2019-10-22T00:05:17.534Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/global/analysisQueries/b3a6905a3353439ab3ce8ce416ec6b79",
      "title": "dma_video_viewability_by_device_type_display_video_360",
      "queryText": "WITH\n  impressions AS (\n    SELECT line_item_id AS line_item_id,\n           adgroup_id AS adgroup_id,\n           mobile_browser_class,\n           is_app_traffic,\n           creative_id,\n           inventory_type,\n           1 AS is_imp,\n           viewability_metrics\n    FROM adh.dv360_youtube_impressions\n  ),\n  active_views AS (\n    SELECT imp.line_item_id AS line_item_id,\n           imp.adgroup_id AS adgroup_id,\n           imp.mobile_browser_class,\n           imp.is_app_traffic,\n           imp.creative_id,\n           imp.inventory_type,\n           0 AS is_imp,\n           av.viewability_metrics\n    FROM adh.dv360_youtube_impressions imp\n    LEFT JOIN adh.dv360_youtube_active_views av USING (impression_id)\n  ),\n  conversions AS (\n    SELECT imp.line_item_id AS line_item_id,\n           imp.adgroup_id AS adgroup_id,\n           imp.mobile_browser_class,\n           imp.is_app_traffic,\n           imp.creative_id,\n           imp.inventory_type,\n           0 AS is_imp,\n           conv.viewability_metrics\n    FROM adh.dv360_youtube_impressions imp\n    LEFT JOIN adh.dv360_youtube_creative_conversions conv USING(impression_id)\n  ),\n  unioned AS (\n    SELECT * FROM impressions\n    UNION ALL\n    SELECT * FROM active_views\n    UNION ALL\n    SELECT * FROM conversions\n  )\nSELECT line_item_id,\n       device_type,\n       num_impressions AS impressions,\n       num_measurable_impressions AS measurable_impr,\n       num_unmeasurable_impressions AS non_measurable_impr,\n       num_viewable_impressions AS viewable_impr,\n       num_unviewable_impressions AS non_viewable_impr,\n       SAFE_DIVIDE(num_measurable_impressions, num_impressions) AS measurable_rate,\n       SAFE_DIVIDE(num_viewable_impressions, num_measurable_impressions) AS viewable_rate,\n       SAFE_DIVIDE(num_unmeasurable_impressions, num_enabled_impressions) AS non_measurable_impr_distrib,\n       SAFE_DIVIDE(num_unviewable_impressions, num_enabled_impressions) AS non_viewable_impr_distrib,\n       SAFE_DIVIDE(num_viewable_impressions, num_enabled_impressions) AS viewable_impr_distrib\nFROM (\n  SELECT line_item_id,\n         device_type,\n         num_impressions,\n         num_measurable_impressions,\n         num_impressions - num_measurable_impressions AS num_unmeasurable_impressions,\n         num_viewable_impressions,\n         num_measurable_impressions - num_viewable_impressions AS num_unviewable_impressions,\n         num_enabled_impressions\n  FROM (\n    SELECT u.line_item_id,\n           CASE\n             WHEN mobile_browser_class = 3 THEN \"Desktop Web\"\n             WHEN mobile_browser_class IN (5, 6, 7) THEN \"Ott\"\n             WHEN mobile_browser_class IN (1, 2, 4) AND is_app_traffic THEN \"Mobile App\"\n             WHEN mobile_browser_class IN (1, 2, 4) THEN \"Mobile Web\"\n             ELSE \"Other\"\n           END AS device_type,\n           SUM(is_imp) AS num_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.measurable_count) AS num_measurable_impressions,\n           SUM(viewability_metrics.enabled_count) AS num_enabled_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.viewable_count) AS num_viewable_impressions\n    FROM unioned u\n    JOIN adh.dv360_youtube_creative cr USING(creative_id)\n    JOIN adh.dv360_youtube_adgroup adg\n      ON u.adgroup_id = adg.adgroup_id\n    WHERE u.line_item_id IN UNNEST(@line_item_ids)\n      AND (u.inventory_type IN ('YOUTUBE', 'YOUTUBE_MUSIC')\n           OR (u.inventory_type = 'OTHER' AND mobile_browser_class NOT IN (5, 6, 7)))\n      AND (\n        adg.adgroup_type IS NULL\n        OR adg.adgroup_type IN (\n          'VIDEO_TRUE_VIEW_IN_STREAM',\n          'VIDEO_BUMPER',\n          'VIDEO_NON_SKIPPABLE_IN_STREAM'))\n    GROUP BY line_item_id, device_type\n  )\n)\nORDER BY line_item_id, device_type",
      "parameterTypes": {
        "line_item_ids": {
          "type": {
            "arrayType": {
              "type": "INT64"
            }
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "Measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Device_type": {
            "type": "CONSTANT",
            "value": {
              "value": "Filtered Rows"
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:32:37.795Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2024-01-24T22:32:37.795Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/417739410/analysisQueries/8d17be5cc61c46ed99dd7ff98e10a247",
      "title": "kagami test",
      "queryText": "SELECT\n    i.campaign_id,\n    DATE(TIMESTAMP_MICROS(c.click_id.time_usec), 'Asia/Tokyo') AS date,\n    COUNT(*) AS click\n    FROM adh.google_ads_clicks c\n    INNER JOIN adh.google_ads_impressions i USING (impression_id)\n    GROUP BY 1, 2;",
      "queryState": "RUNNABLE",
      "updateTime": "2023-12-05T01:30:28.461Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-12-05T01:30:28.461Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/025000780fdc461786dc13fabd5732be",
      "title": "kono_test",
      "queryText": "select\n    campaign_id,\n    date(timestamp_micros(query_id.time_usec), 'Asia/Tokyo') as date,\n    count(query_id.time_usec) as imp\nfrom adh.google_ads_impressions\ngroup by 1, 2\n;",
      "queryState": "RUNNABLE",
      "updateTime": "2023-12-21T03:26:31.064Z",
      "updateEmail": "kono_haruhi@cyberagent.co.jp",
      "createTime": "2023-12-21T03:26:31.064Z",
      "createEmail": "kono_haruhi@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/global/analysisQueries/638c87dff2d044369b84c1e3842fa1f8",
      "title": "label_for_conversion_events",
      "queryText": "SELECT\n  Ctv.is_masthead AS is_masthead,\n  Ctv.creative_type AS creative_type,\n  Conv.label AS label\nFROM adh.yt_reserve_impressions AS i\nLEFT JOIN adh.yt_reserve_conversions AS conv\n  USING (impression_id)\nLEFT JOIN adh.yt_reserve_creative AS ctv\n  ON i.creative_id = ctv.creative_id\nGROUP BY\n  is_masthead, creative_type, label",
      "mergeSpec": {},
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:32:40.496Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-15T19:12:11.403Z",
      "createEmail": "samwasserman@google.com"
    },
    {
      "name": "customers/417739410/analysisQueries/c7bb7259c2bb4364a0c583dc83df4a9b",
      "title": "sample1",
      "queryText": "select *\nfrom adh.city;\n",
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-19T05:19:34.420Z",
      "updateEmail": "adh-querier-executer@aitech-aoc-akagi-cdp-dev.iam.gserviceaccount.com",
      "createTime": "2023-09-19T05:19:34.420Z",
      "createEmail": "adh-querier-executer@aitech-aoc-akagi-cdp-dev.iam.gserviceaccount.com",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/6e0b901df3ed472e96fd2909bfa374b2",
      "title": "sample2",
      "queryText": "\nselect * from adh.google_ads_clicks;\n",
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-19T06:32:21.371Z",
      "updateEmail": "adh-querier-executer@aitech-aoc-akagi-cdp-dev.iam.gserviceaccount.com",
      "createTime": "2023-09-19T06:32:21.371Z",
      "createEmail": "adh-querier-executer@aitech-aoc-akagi-cdp-dev.iam.gserviceaccount.com",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/global/analysisQueries/2e31d977450045cd88175622a6d847e4",
      "title": "stats",
      "queryText": "SELECT\n  gender_name as gender_id,\n  age_group_name as age_group_id,\n  COUNT(imp.query_id.time_usec) as impressions,\n  COUNT(clk.click_id.time_usec) as clicks,\n  COUNT(con.conversion_id.time_usec) as conversions,\n  COUNT(DISTINCT imp.user_id) as aggregated_users\nFROM adh.google_ads_impressions imp\n  LEFT JOIN adh.google_ads_clicks clk USING (impression_id)\n  FULL JOIN adh.google_ads_conversions con USING (click_id)\n  LEFT JOIN adh.gender ON demographics.gender = gender_id\n  LEFT JOIN adh.age_group ON demographics.age_group = age_group_id\nGROUP BY 1,2\nORDER BY 1,2",
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:44.588Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "1970-01-01T00:00:00Z"
    },
    {
      "name": "customers/global/analysisQueries/fd94f7a160424ca0a1024dcb9297649f",
      "title": "stats_dbm",
      "queryText": "WITH\n  imp AS (\n    SELECT\n      ADVERTISER.dv360_partner_id AS partner,\n      event.dv360_country_code AS country,\n      COUNT(*) as impressions,\n      SUM(event.active_view_viewable_impressions) AS active_view_impressions,\n      COUNT(DISTINCT user_id) as aggregated_users\n    FROM\n      adh.dv360_dt_impressions AS IMPRESSION\n    LEFT JOIN adh.dv360_dt_advertiser AS ADVERTISER\n      ON ADVERTISER.dv360_advertiser_id = IMPRESSION.event.dv360_advertiser_id\n    GROUP BY 1, 2\n  ), click AS (\n    SELECT\n      ADVERTISER.dv360_partner_id AS partner,\n      event.dv360_country_code AS country,\n      COUNT(*) as clicks\n    FROM\n      adh.dv360_dt_clicks AS CLICK\n    LEFT JOIN adh.dv360_dt_advertiser AS ADVERTISER\n      ON ADVERTISER.dv360_advertiser_id = CLICK.event.dv360_advertiser_id\n    GROUP BY 1, 2\n  ), activity AS (\n    SELECT\n      ADVERTISER.dv360_partner_id AS partner,\n      event.dv360_country_code AS country,\n      COUNT(*) as conversions\n    FROM\n      adh.dv360_dt_activities_attributed AS ACTIVITY\n    LEFT JOIN adh.dv360_dt_advertiser AS ADVERTISER\n      ON ADVERTISER.dv360_advertiser_id = ACTIVITY.event.dv360_advertiser_id\n    WHERE event.attribution_model_config_id = 0 # Filter to count events from the default attribution model only\n    GROUP BY 1, 2\n  )\nSELECT\n  imp.partner,\n  imp.country,\n  COALESCE(imp.impressions, 0) AS impressions,\n  COALESCE(imp.active_view_impressions, 0) AS active_view_impressions,\n  COALESCE(imp.aggregated_users, 0) AS users,\n  COALESCE(click.clicks, 0) AS clicks,\n  COALESCE(activity.conversions, 0) AS conversions\nFROM imp\n  JOIN click USING (partner, country)\n  JOIN activity USING (partner, country)\nORDER BY 1,2",
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:48.783Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "1970-01-01T00:00:00Z"
    },
    {
      "name": "customers/global/analysisQueries/30fb3cbbd1544b53927ab00ee6454206",
      "title": "stats_dcm",
      "queryText": "WITH\n  imp AS (\n    SELECT\n      network_id AS network,\n      event.country_domain_name AS country,\n      COUNT(*) as impressions,\n      SUM(event.active_view_viewable_impressions) AS active_view_impressions,\n      COUNT(DISTINCT user_id) as aggregated_users\n    FROM adh.cm_dt_impressions\n    GROUP BY 1, 2\n    HAVING aggregated_users \u003e= 50\n  ), click AS (\n    SELECT\n      network_id AS network,\n      event.country_domain_name AS country,\n      COUNT(*) as clicks\n    FROM adh.cm_dt_clicks\n    WHERE event.event_type='CLICK'\n    GROUP BY 1, 2\n  ), activity AS (\n    SELECT\n      network_id AS network,\n      event.country_domain_name AS country,\n      COUNT(*) as conversions\n    FROM adh.cm_dt_activities_events\n    WHERE event.event_type='FLOODLIGHT'\n    GROUP BY 1, 2\n  )\nSELECT\n  imp.network,\n  imp.country,\n  COALESCE(imp.impressions, 0) AS impressions,\n  COALESCE(imp.active_view_impressions, 0) AS active_view_impressions,\n  COALESCE(imp.aggregated_users, 0) AS users,\n  COALESCE(click.clicks, 0) AS clicks,\n  COALESCE(activity.conversions, 0) AS conversions\nFROM imp\n  JOIN click USING (network, country)\n  JOIN activity USING (network, country)\nORDER BY 1,2",
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:52.076Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "1970-01-01T00:00:00Z"
    },
    {
      "name": "customers/global/analysisQueries/6c84c06f48a743e08507be83a95ac1d7",
      "title": "supplychain_dv360",
      "queryText": "SELECT\n  event.dv360_exchange_id,\n  event.dv360_site_id,\n  ARRAY_TO_STRING(event.dv360_supply_chain_domain, \" \u003e \", \"\") as supply_chain_domain_path, # convert the array to a string, with each element concatenated by \"\u003e\"\n  COUNT(*) as impressions\nFROM adh.dv360_dt_impressions\nWHERE event.dv360_supply_chain_complete = TRUE # where the supply path is complete\nAND event.dv360_advertiser_id = @dv360_advertiser_id\nGROUP BY 1,2,3;",
      "parameterTypes": {
        "dv360_advertiser_id": {
          "type": {
            "type": "INT64"
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "WHITELISTED",
      "updateTime": "2024-01-24T22:32:55.032Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2021-02-18T23:56:03.680Z",
      "createEmail": "kjq@google.com"
    },
    {
      "name": "customers/417739410/analysisQueries/8ec8492adad3485fb18a6e0f6a6ddcd8",
      "title": "test",
      "queryText": "SELECT\n    campaign_id,\n    campaign_name,\n    start_time,\n    end_time,\n    TIMESTAMP_MICROS(start_time) as start_timestamp_micros,\n    TIMESTAMP_MICROS(end_time) as end_timestamp_micros\nFROM\n    adh.google_ads_campaign\nwhere campaign_name = '日本マイクロソフト_FY24Q3Surface_gdn_240201_240331_KBS-AIセグメント_BTS'\n;\n\n",
      "queryState": "RUNNABLE",
      "updateTime": "2024-02-06T07:23:16.402Z",
      "updateEmail": "chiba_katsuhito@cyberagent.co.jp",
      "createTime": "2024-02-06T07:23:08.363Z",
      "createEmail": "chiba_katsuhito@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/54d053fd92124d8daf2e2caada0f78a3",
      "title": "test_kagami",
      "queryText": "WITH cp_name AS (\n    SELECT\n        campaign_id,\n        campaign_name\n    FROM adh.google_ads_campaign\n)\n\nSELECT\n    campaign_name,\n    DATE(TIMESTAMP_MICROS(gai.query_id.time_usec), 'Asia/Tokyo') AS jst_date,\n    COUNT(DISTINCT impression_id) AS cnt_imp,\n    COUNT(DISTINCT gai.user_id) AS uu,\n    SUM(CASE WHEN is_app_traffic THEN 1 ELSE 0 END) AS cnt_app,\n    SUM(gaav.viewability_metrics.time_on_screen.measurable_count) AS m_count,\n    SUM(gaav.viewability_metrics.time_on_screen.msec) AS msec,\n    SUM(gaav.viewability_metrics.mrc_viewable_impressions.viewable_count)\n        AS mrc_viewable_count,\n    SUM(gaav.viewability_metrics.groupm_viewable_impressions.viewable_count)\n        AS groupm_viewable_count,\n    SUM(\n        gaav.viewability_metrics.groupm_trueview_viewable_impressions.viewable_count\n    ) AS groupm_tv_viewable_count,\n    SUM(\n        gaav.viewability_metrics.mrc_cross_media_viewable_impressions.viewable_count\n    ) AS mrc_cross_media_viewable_count,\n    SUM(gaav.viewability_metrics.active_view_plus_metrics.measurable_count)\n        AS measurable_count\nFROM adh.google_ads_impressions AS gai -- imp logとcampaign を突合\nINNER JOIN cp_name ON gai.campaign_id = cp_name.campaign_id\nLEFT JOIN adh.google_ads_active_views AS gaav USING (impression_id)\nGROUP BY 1, 2;",
      "mergeSpec": {
        "columns": {
          "uu": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "campaign_name": {
            "type": "CONSTANT",
            "value": {
              "value": "Filtered Rows"
            }
          },
          "mrc_viewable_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "cnt_app": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "msec": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "m_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "mrc_cross_media_viewable_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "measurable_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "cnt_imp": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "groupm_viewable_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "groupm_tv_viewable_count": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-25T08:33:02.579Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-09-20T07:10:56.883Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp"
    },
    {
      "name": "customers/global/analysisQueries/97bda9d5a6f547b8981b3b3829f9bfea",
      "title": "tmp_table_example",
      "queryText": "CREATE TABLE impcount\nAS(\n  SELECT COUNT(*) AS impressions\n  FROM adh.google_ads_impressions\n);\n\nSELECT impressions FROM tmp.impcount",
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:32:58.348Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "1970-01-01T00:00:00Z"
    },
    {
      "name": "customers/global/analysisQueries/f2cf48bda18e453eafadee2390d3bb6b",
      "title": "video_viewability_and_advanced_viewability_across_browser_and_mobile_app",
      "queryText": "WITH imp_stats AS (\n  SELECT\n    imp.campaign_id,\n    imp.adgroup_id,\n    count(*) as total_imp,\n    SUM(imp.viewability_metrics.mrc_viewable_impressions.measurable_count) AS num_measurable\n  FROM adh.google_ads_impressions imp\n  JOIN adh.google_ads_campaign cmp USING(campaign_id)\n  WHERE cmp.advertising_channel_type = 'VIDEO'\n  GROUP BY 1, 2\n), av_stats AS (\n  SELECT\n    imp.campaign_id,\n    imp.adgroup_id,\n    SUM(imp.viewability_metrics.mrc_viewable_impressions.viewable_count) AS num_viewable\n  FROM adh.google_ads_impressions imp\n  JOIN adh.google_ads_campaign cmp USING(campaign_id)\n  LEFT JOIN adh.google_ads_active_views av USING(impression_id)\n  WHERE cmp.advertising_channel_type = 'VIDEO'\n  GROUP BY 1, 2\n), quartile_stats AS (\n  SELECT\n    imp.campaign_id,\n    imp.adgroup_id,\n    COUNTIF(conv.label='videoplaytime25') AS quartile25,\n    COUNTIF(conv.label='videoplaytime50') AS quartile50,\n    COUNTIF(conv.label='videoplaytime75') AS quartile75,\n    COUNTIF(conv.label='videoplaytime100') AS quartile100,\n    COUNTIF(conv.label='videoskipped') AS video_skipped\n/* Continued here */\n  FROM adh.google_ads_impressions imp\n  JOIN adh.google_ads_campaign cmp USING(campaign_id)\n  LEFT JOIN adh.google_ads_conversions conv USING(impression_id)\n  WHERE cmp.advertising_channel_type = 'VIDEO'\n    AND conv.label IN('videoskipped','videoplaytime25','videoplaytime50','videoplaytime75','videoplaytime100')\n  GROUP BY 1, 2\n)\nSELECT\n  imp.campaign_id,\n  cmp.campaign_name,\n  imp.adgroup_id,\n  adg.adgroup_name,\n  adg.adgroup_type,\n  imp.total_imp,\n  imp.num_measurable AS num_measurable,\n  IFNULL(av.num_viewable, 0) AS num_viewable,\n  IFNULL(q.quartile25, 0) AS quartile25,\n  IFNULL(q.quartile50, 0) AS quartile50,\n  IFNULL(q.quartile75, 0) AS quartile75,\n  IFNULL(q.quartile100, 0) AS quartile100,\n  IFNULL(q.video_skipped, 0) AS video_skipped\nFROM imp_stats as imp\nLEFT JOIN av_stats AS av USING(campaign_id, adgroup_id)\nLEFT JOIN quartile_stats AS q USING(campaign_id, adgroup_id)\nJOIN adh.google_ads_campaign cmp USING(campaign_id)\nJOIN adh.google_ads_adgroup adg USING(adgroup_id)\nORDER BY 1, 2, 3, 4, 5",
      "mergeSpec": {
        "columns": {
          "total_imp": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:33:01.206Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-15T19:12:24.955Z",
      "createEmail": "samwasserman@google.com"
    },
    {
      "name": "customers/global/analysisQueries/ea2b66eaa4e545c2af80ec276478f04b",
      "title": "video_viewability_dv360",
      "queryText": "WITH\n  impressions AS (\n    SELECT line_item_id AS line_item_id,\n           adgroup_id AS adgroup_id,\n           mobile_browser_class,\n           is_app_traffic,\n           creative_id,\n           inventory_type,\n           1 AS is_imp,\n           viewability_metrics\n    FROM adh.dv360_youtube_impressions\n  ),\n  active_views AS (\n    SELECT imp.line_item_id AS line_item_id,\n           imp.adgroup_id AS adgroup_id,\n           imp.mobile_browser_class,\n           imp.is_app_traffic,\n           imp.creative_id,\n           imp.inventory_type,\n           0 AS is_imp,\n           av.viewability_metrics\n    FROM adh.dv360_youtube_impressions imp\n    LEFT JOIN adh.dv360_youtube_active_views av USING (impression_id)\n  ),\n  conversions AS (\n    SELECT imp.line_item_id AS line_item_id,\n           imp.adgroup_id AS adgroup_id,\n           imp.mobile_browser_class,\n           imp.is_app_traffic,\n           imp.creative_id,\n           imp.inventory_type,\n           0 AS is_imp,\n           conv.viewability_metrics\n    FROM adh.dv360_youtube_impressions imp\n    LEFT JOIN adh.dv360_youtube_creative_conversions conv USING(impression_id)\n  ),\n  unioned AS (\n    SELECT * FROM impressions\n    UNION ALL\n    SELECT * FROM active_views\n    UNION ALL\n    SELECT * FROM conversions\n  )\nSELECT line_item_id,\n       device_type,\n       num_impressions AS impressions,\n       num_measurable_impressions AS measurable_impr,\n       num_unmeasurable_impressions AS non_measurable_impr,\n       num_viewable_impressions AS viewable_impr,\n       num_unviewable_impressions AS non_viewable_impr,\n       SAFE_DIVIDE(num_measurable_impressions, num_impressions) AS measurable_rate,\n       SAFE_DIVIDE(num_viewable_impressions, num_measurable_impressions) AS viewable_rate,\n       SAFE_DIVIDE(num_unmeasurable_impressions, num_enabled_impressions) AS non_measurable_impr_distrib,\n       SAFE_DIVIDE(num_unviewable_impressions, num_enabled_impressions) AS non_viewable_impr_distrib,\n       SAFE_DIVIDE(num_viewable_impressions, num_enabled_impressions) AS viewable_impr_distrib\nFROM (\n  SELECT line_item_id,\n         device_type,\n         num_impressions,\n         num_measurable_impressions,\n         num_impressions - num_measurable_impressions AS num_unmeasurable_impressions,\n         num_viewable_impressions,\n         num_measurable_impressions - num_viewable_impressions AS num_unviewable_impressions,\n         num_enabled_impressions\n  FROM (\n    SELECT u.line_item_id,\n           CASE\n             WHEN mobile_browser_class = 3 THEN \"Desktop Web\"\n             WHEN mobile_browser_class IN (5, 6, 7) THEN \"Ott\"\n             WHEN mobile_browser_class IN (1, 2, 4) AND is_app_traffic THEN \"Mobile App\"\n             WHEN mobile_browser_class IN (1, 2, 4) THEN \"Mobile Web\"\n             ELSE \"Other\"\n           END AS device_type,\n           SUM(is_imp) AS num_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.measurable_count) AS num_measurable_impressions,\n           SUM(viewability_metrics.enabled_count) AS num_enabled_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.viewable_count) AS num_viewable_impressions\n    FROM unioned u\n    JOIN adh.dv360_youtube_creative cr USING(creative_id)\n    JOIN adh.dv360_youtube_adgroup adg\n      ON u.adgroup_id = adg.adgroup_id\n    WHERE u.line_item_id IN UNNEST(@line_item_ids)\n      AND (u.inventory_type IN ('YOUTUBE', 'YOUTUBE_MUSIC')\n           OR (u.inventory_type = 'OTHER' AND mobile_browser_class NOT IN (5, 6, 7)))\n      AND (\n        adg.adgroup_type IS NULL\n        OR adg.adgroup_type IN (\n          'VIDEO_TRUE_VIEW_IN_STREAM',\n          'VIDEO_BUMPER',\n          'VIDEO_NON_SKIPPABLE_IN_STREAM'))\n    GROUP BY line_item_id, device_type\n  )\n)\nORDER BY line_item_id, device_type",
      "parameterTypes": {
        "line_item_ids": {
          "type": {
            "arrayType": {
              "type": "INT64"
            }
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "Measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:33:03.944Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-22T22:06:26.698Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/global/analysisQueries/f41320e7296d49158e572aba662f35b1",
      "title": "video_viewability_google_ads",
      "queryText": "WITH\n  impressions AS (\n    SELECT campaign_id AS campaign_id,\n           adgroup_id AS adgroup_id,\n           mobile_browser_class,\n           is_app_traffic,\n           inventory_type,\n           1 AS is_imp,\n           viewability_metrics\n    FROM adh.google_ads_impressions\n  ),\n  active_views AS (\n    SELECT imp.campaign_id AS campaign_id,\n           imp.adgroup_id AS adgroup_id,\n           imp.mobile_browser_class,\n           imp.is_app_traffic,\n           imp.inventory_type,\n           0 AS is_imp,\n           av.viewability_metrics\n    FROM adh.google_ads_impressions imp\n    LEFT JOIN adh.google_ads_active_views AS av USING(impression_id)\n  ),\n  conversions AS (\n    SELECT imp.campaign_id AS campaign_id,\n           imp.adgroup_id AS adgroup_id,\n           imp.mobile_browser_class,\n           imp.is_app_traffic,\n           imp.inventory_type,\n           0 AS is_imp,\n           conv.viewability_metrics\n    FROM adh.google_ads_impressions imp\n    LEFT JOIN adh.google_ads_creative_conversions AS conv USING(impression_id)\n  ),\n  unioned as (\n    SELECT * FROM impressions\n    UNION ALL\n    SELECT * FROM active_views\n    UNION ALL\n    SELECT * FROM conversions\n)\nSELECT campaign_id,\n       device_type,\n       num_impressions AS impressions,\n       num_measurable_impressions AS measurable_impr,\n       num_unmeasurable_impressions AS non_measurable_impr,\n       num_viewable_impressions AS viewable_impr,\n       num_unviewable_impressions AS non_viewable_impr,\n       SAFE_DIVIDE(num_measurable_impressions, num_impressions) AS measurable_rate,\n       SAFE_DIVIDE(num_viewable_impressions, num_measurable_impressions) AS viewable_rate,\n       SAFE_DIVIDE(num_unmeasurable_impressions, num_enabled_impressions) AS non_measurable_impr_distrib,\n       SAFE_DIVIDE(num_unviewable_impressions, num_enabled_impressions) AS non_viewable_impr_distrib,\n       SAFE_DIVIDE(num_viewable_impressions, num_enabled_impressions) AS viewable_impr_distrib\nFROM (\n  SELECT campaign_id,\n         device_type,\n         num_impressions,\n         num_measurable_impressions,\n         num_impressions - num_measurable_impressions AS num_unmeasurable_impressions,\n         num_viewable_impressions,\n         num_measurable_impressions - num_viewable_impressions AS num_unviewable_impressions,\n         num_enabled_impressions\n  FROM (\n    SELECT u.campaign_id,\n           CASE\n             WHEN mobile_browser_class = 3 THEN \"Desktop Web\"\n             WHEN mobile_browser_class IN (5, 6, 7) THEN \"Ott\"\n             WHEN mobile_browser_class IN (1, 2, 4) AND is_app_traffic THEN \"Mobile App\"\n             WHEN mobile_browser_class IN (1, 2, 4) THEN \"Mobile Web\"\n             ELSE \"Other\"\n           END AS device_type,\n           SUM(is_imp) as num_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.measurable_count) AS num_measurable_impressions,\n           SUM(viewability_metrics.enabled_count) AS num_enabled_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.viewable_count) AS num_viewable_impressions\n    FROM unioned u\n    JOIN adh.google_ads_campaign cmp USING(campaign_id)\n    JOIN adh.google_ads_adgroup adg USING(adgroup_id)\n      WHERE u.campaign_id IN UNNEST(@campaign_ids)\n        AND (u.inventory_type IN ('YOUTUBE', 'YOUTUBE_MUSIC')\n             OR (u.inventory_type = 'OTHER' AND mobile_browser_class NOT IN (5, 6, 7)))\n        AND (\n          adg.adgroup_type IS NULL\n          OR adg.adgroup_type IN (\n            'VIDEO_TRUE_VIEW_IN_STREAM',\n            'VIDEO_BUMPER',\n            'VIDEO_NON_SKIPPABLE_IN_STREAM'))\n        AND cmp.advertising_channel_type = 'VIDEO'\n    GROUP BY campaign_id, device_type\n  )\n)\nORDER BY campaign_id, device_type",
      "parameterTypes": {
        "campaign_ids": {
          "type": {
            "arrayType": {
              "type": "INT64"
            }
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "Measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:33:07.160Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-22T22:06:29.666Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/global/analysisQueries/ad88e8562a8f4baa9c8522945fe95522",
      "title": "video_viewability_yt_reserve",
      "queryText": "WITH\n  impressions AS (\n    SELECT line_item_id,\n           creative_id,\n           mobile_browser_class,\n           is_app_traffic,\n           inventory_type,\n           1 AS is_imp,\n           format_category,\n           viewability_metrics\n    FROM adh.yt_reserve_impressions\n  ),\n  active_views AS (\n    SELECT line_item_id,\n           creative_id,\n           mobile_browser_class,\n           is_app_traffic,\n           inventory_type,\n           0 AS is_imp,\n           format_category,\n           av.viewability_metrics\n    FROM adh.yt_reserve_impressions imp\n    LEFT JOIN adh.yt_reserve_active_views av USING (impression_id)\n  ),\n  conversions AS (\n    SELECT line_item_id,\n           imp.creative_id,\n           mobile_browser_class,\n           is_app_traffic,\n           inventory_type,\n           0 AS is_imp,\n           format_category,\n           conv.viewability_metrics\n    FROM adh.yt_reserve_impressions imp\n    LEFT JOIN adh.yt_reserve_creative_conversions conv USING (impression_id)\n  ),\n  unioned AS (\n    SELECT * FROM impressions\n    UNION ALL\n    SELECT * FROM active_views\n    UNION ALL\n    SELECT * FROM conversions\n  )\nSELECT line_item_id,\n       device_type,\n       num_impressions AS impressions,\n       num_measurable_impressions AS measurable_impr,\n       num_unmeasurable_impressions AS non_measurable_impr,\n       num_viewable_impressions AS viewable_impr,\n       num_unviewable_impressions AS non_viewable_impr,\n       measurable_rate,\n       viewable_rate,\n       CASE\n         WHEN num_enabled_impressions \u003e 0 THEN num_unmeasurable_impressions / num_enabled_impressions\n         ELSE NULL\n       END AS non_measurable_impr_distrib,\n       CASE\n         WHEN num_enabled_impressions \u003e 0 THEN num_unviewable_impressions / num_enabled_impressions\n         ELSE NULL\n       END AS non_viewable_impr_distrib,\n       CASE\n         WHEN num_enabled_impressions \u003e 0 THEN num_viewable_impressions / num_enabled_impressions\n         ELSE NULL\n       END AS viewable_impr_distrib\nFROM (\n  SELECT line_item_id,\n         device_type,\n         num_impressions,\n         num_measurable_impressions,\n         num_impressions - num_measurable_impressions AS num_unmeasurable_impressions,\n         num_viewable_impressions,\n         num_measurable_impressions - num_viewable_impressions AS num_unviewable_impressions,\n         CASE\n           WHEN num_impressions \u003e 0 THEN num_measurable_impressions / num_impressions\n           ELSE NULL\n         END AS measurable_rate,\n         CASE\n           WHEN num_measurable_impressions \u003e 0 THEN num_viewable_impressions / num_measurable_impressions\n           ELSE NULL\n         END AS viewable_rate,\n         num_enabled_impressions\n  FROM (\n    SELECT line_item_id,\n           CASE\n             WHEN mobile_browser_class = 3 THEN \"Desktop Web\"\n             WHEN mobile_browser_class IN (5, 6, 7)  THEN \"Ott\"\n             WHEN mobile_browser_class IN (1, 2, 4) AND is_app_traffic THEN \"Mobile App\"\n             WHEN mobile_browser_class IN (1, 2, 4) THEN \"Mobile Web\"\n             ELSE \"Other\"\n           END AS device_type,\n           SUM(is_imp) AS num_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.measurable_count) AS num_measurable_impressions,\n           SUM(viewability_metrics.enabled_count) AS num_enabled_impressions,\n           SUM(viewability_metrics.mrc_viewable_impressions.viewable_count) AS num_viewable_impressions\n    FROM unioned u\n    JOIN adh.yt_reserve_creative cr USING(creative_id)\n    JOIN adh.yt_reserve_lineitem li USING(line_item_id)\n    WHERE u.line_item_id IN UNNEST(@line_item_ids)\n      AND inventory_type IN ('YOUTUBE', 'YOUTUBE_MUSIC')\n      AND (format_category = 'VIDEO' OR format_category IS NULL)\n      AND li.programmatic IS FALSE\n      AND cr.is_masthead IS FALSE\n    GROUP BY line_item_id, device_type\n  )\n)\nORDER BY line_item_id, device_type",
      "parameterTypes": {
        "line_item_ids": {
          "type": {
            "arrayType": {
              "type": "INT64"
            }
          },
          "defaultValue": {
            "value": ""
          }
        }
      },
      "mergeSpec": {
        "columns": {
          "Measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_measurable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          },
          "Non_viewable_impr": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:33:10.075Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-22T21:49:00.119Z",
      "createEmail": "linfongi@google.com"
    },
    {
      "name": "customers/global/analysisQueries/c512d1d6c12b46f997bf9a58e65be874",
      "title": "viewability_and_measurability",
      "queryText": "SELECT\n  DATE(TIMESTAMP_MICROS(CAST(imp.query_id.time_usec AS int64)))\n    AS date_created,\n  Imp.line_item_id AS line_item_id,\n  Imp.creative_id AS creative_id,\n  Imp.location.geo_region AS geo_region,\n  COUNT(*) AS impressions,\n  COUNTIF(click.query_id IS NOT NULL AND click.click_type = 18)\n    AS views,\n  SUM(imp.viewability_metrics.mrc_viewable_impressions.measurable_count)\n    AS active_view_measuable_count,\n  COUNTIF(av.view_type = 'ACTIVE_VIEW_VIDEO'\n    AND av.active_view.view_state = 4) AS active_view_viewable_count\n\nFROM adh.yt_reserve_impressions AS imp\nLEFT JOIN adh.yt_reserve_clicks AS click USING(impression_id)\nLEFT JOIN adh.yt_reserve_active_views AS av USING(impression_id)\nJOIN adh.yt_reserve_creative AS creative USING(creative_id)\n\nGROUP BY 1,2,3,4",
      "mergeSpec": {
        "columns": {
          "impressions": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-24T22:33:12.988Z",
      "updateEmail": "linfongi@google.com",
      "createTime": "2020-01-15T19:12:27.265Z",
      "createEmail": "samwasserman@google.com"
    },
    {
      "name": "customers/417739410/analysisQueries/a4bdc1b49c43458fa3f9b9a3190539f4",
      "title": "work kagami click count",
      "queryText": "SELECT\n    i.campaign_id,\n    DATE(TIMESTAMP_MICROS(c.click_id.time_usec), 'Asia/Tokyo') AS date,\n    COUNT(*) AS click\n    FROM adh.google_ads_clicks c\n    INNER JOIN adh.google_ads_impressions i USING (impression_id)\n    GROUP BY 1, 2;\n",
      "queryState": "RUNNABLE",
      "updateTime": "2023-10-06T08:38:55.465Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-10-06T05:58:07.148Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/9db5bff0a73342f59b6486e36b2c794f",
      "title": "work kagami cost",
      "queryText": "WITH\nfirst_imp_date AS (\n    SELECT\n        campaign_id,\n        user_id,\n        MIN(\n            DATE(TIMESTAMP_MICROS(query_id.time_usec), 'Asia/Tokyo')\n        ) AS session_date\n    FROM\n        adh.google_ads_impressions\n    GROUP BY 1, 2\n),\nimp_total_cost AS (\n    select\n        first_imp_date.campaign_id,\n        first_imp_date.session_date,\n        COUNT(cost.advertiser_impression_cost_local_micros) as cost_micros\n    from adh.google_ads_impressions AS cost\n    join first_imp_date on cost.user_id = first_imp_date.user_id\n    group by\n        1, 2\n)\n\nselect\n    campaign_id,\n    session_date as date,\n    cost_micros\nfrom imp_total_cost;",
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-27T10:26:49.703Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-09-25T10:07:06.495Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/47e80abec06e417e84befeae454c088e",
      "title": "work kagami impressions",
      "queryText": "select\n    campaign_id,\n    DATE(TIMESTAMP_MICROS(query_id.time_usec), 'Asia/Tokyo') AS date,\n    count(query_id.time_usec) as imp\nfrom\n    adh.google_ads_impressions\ngroup by\n    1, 2\n;",
      "queryState": "RUNNABLE",
      "updateTime": "2023-10-06T05:23:38.437Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-10-06T05:14:38.622Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/e0ee71975d37476480e54c6b44c2c965",
      "title": "work kagami new click",
      "queryText": "WITH\nfirst_imp_date AS (\n    SELECT\n        campaign_id,\n        user_id,\n        MIN(\n            DATE(TIMESTAMP_MICROS(query_id.time_usec), 'Asia/Tokyo')\n        ) AS session_date\n    FROM\n        adh.google_ads_impressions\n    GROUP BY 1, 2\n),\nimp_new_click_table AS (\n    select\n        first_imp_date.campaign_id,\n        first_imp_date.session_date,\n        COUNT(click.user_id) AS imp_new_click\n    from adh.google_ads_clicks as click\n    join first_imp_date on click.user_id = first_imp_date.user_id\n    group by\n        1, 2\n)\n\nselect\n    campaign_id,\n    session_date as date,\n    imp_new_click\nfrom\n    imp_new_click_table;\n",
      "queryState": "RUNNABLE",
      "updateTime": "2023-10-06T05:55:16.775Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-09-21T10:42:30.673Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/643653e132ba4884b5e8cfacb883d14b",
      "title": "work kagami new uu",
      "queryText": "WITH\nfirst_imp_date AS (\n    SELECT\n        campaign_id,\n        user_id,\n        MIN(\n            DATE(TIMESTAMP_MICROS(query_id.time_usec), 'Asia/Tokyo')\n        ) AS session_date\n    FROM\n        adh.google_ads_impressions\n    GROUP BY 1, 2\n),\n\nimp_new_uu_table AS (\n    SELECT\n        campaign_id,\n        session_date,\n        COUNT(user_id) AS imp_new_uu\n    FROM\n        first_imp_date\n    GROUP BY\n        1, 2\n)\n\nSELECT\n    campaign_id,\n    session_date as date,\n    imp_new_uu\nFROM\n    imp_new_uu_table;\n  ",
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-26T08:31:14.225Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-05-25T08:26:44.868Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/361e0e59648449c8945a6c81046c7c92",
      "title": "work kagami rdid uu",
      "queryText": "WITH\nfirst_imp_date AS (\n    SELECT\n        campaign_id,\n        device_id_md5,\n        MIN(\n            DATE(TIMESTAMP_MICROS(query_id.time_usec), 'Asia/Tokyo')\n        ) AS session_date\n    FROM\n        adh.google_ads_impressions_rdid\n    GROUP BY 1, 2\n),\n\nimp_new_uu_table AS (\n    SELECT\n        campaign_id,\n        session_date,\n        COUNT(device_id_md5) AS imp_new_uu\n    FROM\n        first_imp_date\n    GROUP BY\n        1, 2\n)\n\nSELECT\n    campaign_id,\n    session_date as date,\n    imp_new_uu\nFROM\n    imp_new_uu_table;\n  ",
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-27T10:34:54.054Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-09-27T10:34:54.054Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/323085b55ebe4feda056d89728ef034a",
      "title": "work kagami uu",
      "queryText": "\nselect\n    campaign_id,\n    DATE(TIMESTAMP_MICROS(query_id.time_usec), 'Asia/Tokyo') AS date,\n    COUNT(user_id) AS uu\nfrom adh.google_ads_impressions\ngroup by 1, 2;",
      "queryState": "RUNNABLE",
      "updateTime": "2023-10-06T08:45:37.769Z",
      "updateEmail": "kagami_kazuki@cyberagent.co.jp",
      "createTime": "2023-10-06T08:44:03.836Z",
      "createEmail": "kagami_kazuki@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/51b6317f7c8f4551b3f94a67d678af80",
      "title": "work-ishihara",
      "queryText": "SELECT inventory_type,\n       CASE\n         WHEN mobile_browser_class = 3 THEN 'DESKTOP'\n         WHEN mobile_browser_class = 2 THEN 'MOBILE'\n         WHEN mobile_browser_class = 4 THEN 'TABLET'\n         WHEN mobile_browser_class IN (5, 6, 7) THEN 'CONNECTED_TV'\n         ELSE 'UNKNOWN'\n       END AS platform,\n       COUNT(*) AS num_imp,\n       COUNT(DISTINCT user_id) AS num_cookie\nFROM adh.google_ads_impressions\nGROUP BY 1, 2\n",
      "mergeSpec": {},
      "queryState": "RUNNABLE",
      "updateTime": "2023-09-01T04:45:06.138Z",
      "updateEmail": "ishihara_yoshiaki@cyberagent.co.jp",
      "createTime": "2023-05-25T08:33:48.083Z",
      "createEmail": "ishihara_yoshiaki@cyberagent.co.jp"
    },
    {
      "name": "customers/417739410/analysisQueries/b679348292444867b0c22183e88e0c74",
      "title": "yasutani_test2",
      "queryText": "select\n    campaign_id,\n    date(timestamp_micros(query_id.time_usec), 'Asia/Tokyo') as date,\n    count(query_id.time_usec) as imp\nfrom adh.google_ads_impressions\ngroup by 1, 2\n;\n",
      "queryState": "RUNNABLE",
      "updateTime": "2023-12-21T02:24:07.029Z",
      "updateEmail": "yasutani_naoto@cyberagent.co.jp",
      "createTime": "2023-12-14T06:08:10.618Z",
      "createEmail": "yasutani_naoto@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/f57f7fb4f1a34d92bd3d134cba45a41f",
      "title": "yasutani_test_20231205",
      "queryText": "SELECT\n    campaign_id,\n    campaign_name,\n    start_time,\n    end_time,\n    TIMESTAMP_MICROS(start_time) as start_timestamp_micros,\n    TIMESTAMP_MICROS(end_time) as end_timestamp_micros\nFROM\n    adh.google_ads_campaign\n\n",
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-31T06:31:18.726Z",
      "updateEmail": "yasutani_naoto@cyberagent.co.jp",
      "createTime": "2023-12-05T01:34:45.543Z",
      "createEmail": "yasutani_naoto@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    },
    {
      "name": "customers/417739410/analysisQueries/bf64fdbe547e4a408a61767e801a7596",
      "title": "yasutani_コンバージョン名別のコンバージョン数",
      "queryText": "select\n    conv.impression_data.campaign_id as campaign_id,\n    date('2024-01-15', 'Asia/Tokyo') as date,\n    s.name as conversion_name,\n    sum(conv.num_conversion_micros) / 1000000 as conversions\nfrom adh.google_ads_conversions as conv\njoin\n    adh.google_ads_conversion_settings as s\n    on (conv.conversion_type = s.conversion_type_id)\nwhere\n    date(timestamp_micros(query_id.time_usec), 'Asia/Tokyo')\n    \u003c= date('2024-01-15', 'Asia/Tokyo')\ngroup by campaign_id, conversion_name\norder by campaign_id, conversion_name\n;\n",
      "mergeSpec": {
        "columns": {
          "num_convs": {
            "type": "SUM",
            "value": {
              "value": ""
            }
          }
        }
      },
      "queryState": "RUNNABLE",
      "updateTime": "2024-02-05T09:28:12.591Z",
      "updateEmail": "yasutani_naoto@cyberagent.co.jp",
      "createTime": "2024-02-05T06:36:47.939Z",
      "createEmail": "yasutani_naoto@cyberagent.co.jp"
    },
    {
      "name": "customers/417739410/analysisQueries/8da8cb06e01d4efca8f1e2bf6222ba1f",
      "title": "累計クリックのテスト",
      "queryText": "select\n    i.campaign_id,\n    date('2024-01-31', 'Asia/Tokyo') as date,\n    count(*) as click\nfrom\n     adh.google_ads_clicks c\ninner join\n    adh.google_ads_impressions i using (impression_id)\nwhere\n    date(timestamp_micros(c.click_id.time_usec), 'Asia/Tokyo')\n    \u003c= date('2024-01-31', 'Asia/Tokyo')\ngroup by 1\n",
      "queryState": "RUNNABLE",
      "updateTime": "2024-01-31T09:23:18.107Z",
      "updateEmail": "yasutani_naoto@cyberagent.co.jp",
      "createTime": "2024-01-31T09:23:18.107Z",
      "createEmail": "yasutani_naoto@cyberagent.co.jp",
      "generateFilteredRowSummaryAutomatically": true
    }
  ]
}
